/*
 * Camel Api Route test generated by camel-api-component-maven-plugin
 * Generated on: Mon May 28 16:47:45 CEST 2018
 */
package org.apache.camel.component.fhir;

import java.util.HashMap;
import java.util.Map;
import org.apache.camel.builder.RouteBuilder;
import org.apache.camel.component.fhir.internal.FhirApiCollection;
import org.apache.camel.component.fhir.internal.FhirPatchApiMethod;
import org.junit.Ignore;
import org.junit.Test;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * Test class for {@link org.apache.camel.component.fhir.api.FhirPatch} APIs.
 * TODO Move the file to src/test/java, populate parameter values, and remove @Ignore annotations.
 * The class source won't be generated again if the generator MOJO finds it under src/test/java.
 */
public class FhirPatchIntegrationTest extends AbstractFhirTestSupport {

    private static final Logger LOG = LoggerFactory.getLogger(FhirPatchIntegrationTest.class);
    private static final String PATH_PREFIX = FhirApiCollection.getCollection().getApiName(FhirPatchApiMethod.class).getName();

    // TODO provide parameter values for patchById
    @Ignore
    @Test
    public void testPatchById() throws Exception {
        final Map<String, Object> headers = new HashMap<String, Object>();
        // parameter type is String
        headers.put("CamelFhir.patchBody", null);
        // parameter type is org.hl7.fhir.instance.model.api.IIdType
        headers.put("CamelFhir.iId", null);
        // parameter type is ca.uhn.fhir.rest.api.PreferReturnEnum
        headers.put("CamelFhir.preferReturn", null);

        final ca.uhn.fhir.rest.api.MethodOutcome result = requestBodyAndHeaders("direct://PATCHBYID", null, headers);

        assertNotNull("patchById result", result);
        LOG.debug("patchById: " + result);
    }

    // TODO provide parameter values for patchBySId
    @Ignore
    @Test
    public void testPatchBySId() throws Exception {
        final Map<String, Object> headers = new HashMap<String, Object>();
        // parameter type is String
        headers.put("CamelFhir.patchBody", null);
        // parameter type is String
        headers.put("CamelFhir.sId", null);
        // parameter type is ca.uhn.fhir.rest.api.PreferReturnEnum
        headers.put("CamelFhir.preferReturn", null);

        final ca.uhn.fhir.rest.api.MethodOutcome result = requestBodyAndHeaders("direct://PATCHBYSID", null, headers);

        assertNotNull("patchBySId result", result);
        LOG.debug("patchBySId: " + result);
    }

    // TODO provide parameter values for patchByUrl
    @Ignore
    @Test
    public void testPatchByUrl() throws Exception {
        final Map<String, Object> headers = new HashMap<String, Object>();
        // parameter type is String
        headers.put("CamelFhir.patchBody", null);
        // parameter type is String
        headers.put("CamelFhir.url", null);
        // parameter type is ca.uhn.fhir.rest.api.PreferReturnEnum
        headers.put("CamelFhir.preferReturn", null);

        final ca.uhn.fhir.rest.api.MethodOutcome result = requestBodyAndHeaders("direct://PATCHBYURL", null, headers);

        assertNotNull("patchByUrl result", result);
        LOG.debug("patchByUrl: " + result);
    }

    @Override
    protected RouteBuilder createRouteBuilder() throws Exception {
        return new RouteBuilder() {
            public void configure() {
                // test route for patchById
                from("direct://PATCHBYID")
                    .to("fhir://" + PATH_PREFIX + "/patchById");

                // test route for patchBySId
                from("direct://PATCHBYSID")
                    .to("fhir://" + PATH_PREFIX + "/patchBySId");

                // test route for patchByUrl
                from("direct://PATCHBYURL")
                    .to("fhir://" + PATH_PREFIX + "/patchByUrl");

            }
        };
    }
}
