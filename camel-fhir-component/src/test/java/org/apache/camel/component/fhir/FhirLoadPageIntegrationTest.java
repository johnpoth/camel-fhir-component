/*
 * Camel Api Route test generated by camel-api-component-maven-plugin
 * Generated on: Mon May 28 16:47:45 CEST 2018
 */
package org.apache.camel.component.fhir;

import java.util.HashMap;
import java.util.Map;
import org.apache.camel.builder.RouteBuilder;
import org.apache.camel.component.fhir.internal.FhirApiCollection;
import org.apache.camel.component.fhir.internal.FhirLoadPageApiMethod;
import org.junit.Ignore;
import org.junit.Test;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * Test class for {@link org.apache.camel.component.fhir.api.FhirLoadPage} APIs.
 * TODO Move the file to src/test/java, populate parameter values, and remove @Ignore annotations.
 * The class source won't be generated again if the generator MOJO finds it under src/test/java.
 */
public class FhirLoadPageIntegrationTest extends AbstractFhirTestSupport {

    private static final Logger LOG = LoggerFactory.getLogger(FhirLoadPageIntegrationTest.class);
    private static final String PATH_PREFIX = FhirApiCollection.getCollection().getApiName(FhirLoadPageApiMethod.class).getName();

    // TODO provide parameter values for byUrl
    @Ignore
    @Test
    public void testByUrl() throws Exception {
        final Map<String, Object> headers = new HashMap<String, Object>();
        // parameter type is String
        headers.put("CamelFhir.url", null);
        // parameter type is Class
        headers.put("CamelFhir.returnType", null);

        final org.hl7.fhir.instance.model.api.IBaseBundle result = requestBodyAndHeaders("direct://BYURL", null, headers);

        assertNotNull("byUrl result", result);
        LOG.debug("byUrl: " + result);
    }

    // TODO provide parameter values for next
    @Ignore
    @Test
    public void testNext() throws Exception {
        // using org.hl7.fhir.instance.model.api.IBaseBundle message body for single parameter "bundle"
        final org.hl7.fhir.instance.model.api.IBaseBundle result = requestBody("direct://NEXT", null);

        assertNotNull("next result", result);
        LOG.debug("next: " + result);
    }

    // TODO provide parameter values for previous
    @Ignore
    @Test
    public void testPrevious() throws Exception {
        // using org.hl7.fhir.instance.model.api.IBaseBundle message body for single parameter "bundle"
        final org.hl7.fhir.instance.model.api.IBaseBundle result = requestBody("direct://PREVIOUS", null);

        assertNotNull("previous result", result);
        LOG.debug("previous: " + result);
    }

    @Override
    protected RouteBuilder createRouteBuilder() throws Exception {
        return new RouteBuilder() {
            public void configure() {
                // test route for byUrl
                from("direct://BYURL")
                    .to("fhir://" + PATH_PREFIX + "/byUrl");

                // test route for next
                from("direct://NEXT")
                    .to("fhir://" + PATH_PREFIX + "/next?inBody=bundle");

                // test route for previous
                from("direct://PREVIOUS")
                    .to("fhir://" + PATH_PREFIX + "/previous?inBody=bundle");

            }
        };
    }
}
