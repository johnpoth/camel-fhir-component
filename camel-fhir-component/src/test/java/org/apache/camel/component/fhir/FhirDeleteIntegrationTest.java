/*
 * Camel Api Route test generated by camel-api-component-maven-plugin
 * Generated on: Mon May 28 16:47:45 CEST 2018
 */
package org.apache.camel.component.fhir;

import java.util.HashMap;
import java.util.Map;
import org.apache.camel.builder.RouteBuilder;
import org.apache.camel.component.fhir.internal.FhirApiCollection;
import org.apache.camel.component.fhir.internal.FhirDeleteApiMethod;
import org.junit.Ignore;
import org.junit.Test;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * Test class for {@link org.apache.camel.component.fhir.api.FhirDelete} APIs.
 * TODO Move the file to src/test/java, populate parameter values, and remove @Ignore annotations.
 * The class source won't be generated again if the generator MOJO finds it under src/test/java.
 */
public class FhirDeleteIntegrationTest extends AbstractFhirTestSupport {

    private static final Logger LOG = LoggerFactory.getLogger(FhirDeleteIntegrationTest.class);
    private static final String PATH_PREFIX = FhirApiCollection.getCollection().getApiName(FhirDeleteApiMethod.class).getName();

    // TODO provide parameter values for resource
    @Ignore
    @Test
    public void testResource() throws Exception {
        // using org.hl7.fhir.instance.model.api.IBaseResource message body for single parameter "resource"
        final org.hl7.fhir.instance.model.api.IBaseOperationOutcome result = requestBody("direct://RESOURCE", null);

        assertNotNull("resource result", result);
        LOG.debug("resource: " + result);
    }

    // TODO provide parameter values for resourceById
    @Ignore
    @Test
    public void testResourceById() throws Exception {
        // using org.hl7.fhir.instance.model.api.IIdType message body for single parameter "id"
        final org.hl7.fhir.instance.model.api.IBaseOperationOutcome result = requestBody("direct://RESOURCEBYID", null);

        assertNotNull("resourceById result", result);
        LOG.debug("resourceById: " + result);
    }

    // TODO provide parameter values for resourceById
    @Ignore
    @Test
    public void testResourceById_1() throws Exception {
        final Map<String, Object> headers = new HashMap<String, Object>();
        // parameter type is String
        headers.put("CamelFhir.type", null);
        // parameter type is String
        headers.put("CamelFhir.sId", null);

        final org.hl7.fhir.instance.model.api.IBaseOperationOutcome result = requestBodyAndHeaders("direct://RESOURCEBYID_1", null, headers);

        assertNotNull("resourceById result", result);
        LOG.debug("resourceById: " + result);
    }

    // TODO provide parameter values for resourceConditionalByUrl
    @Ignore
    @Test
    public void testResourceConditionalByUrl() throws Exception {
        // using String message body for single parameter "url"
        final org.hl7.fhir.instance.model.api.IBaseOperationOutcome result = requestBody("direct://RESOURCECONDITIONALBYURL", null);

        assertNotNull("resourceConditionalByUrl result", result);
        LOG.debug("resourceConditionalByUrl: " + result);
    }

    @Override
    protected RouteBuilder createRouteBuilder() throws Exception {
        return new RouteBuilder() {
            public void configure() {
                // test route for resource
                from("direct://RESOURCE")
                    .to("fhir://" + PATH_PREFIX + "/resource?inBody=resource");

                // test route for resourceById
                from("direct://RESOURCEBYID")
                    .to("fhir://" + PATH_PREFIX + "/resourceById?inBody=id");

                // test route for resourceById
                from("direct://RESOURCEBYID_1")
                    .to("fhir://" + PATH_PREFIX + "/resourceById");

                // test route for resourceConditionalByUrl
                from("direct://RESOURCECONDITIONALBYURL")
                    .to("fhir://" + PATH_PREFIX + "/resourceConditionalByUrl?inBody=url");

            }
        };
    }
}
